version: "3.8"

name: group-fundraise

services:
  group-fundraise-db:
    image: postgres:latest
    container_name: group-fundraise-db
    volumes:
      - db_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3

  group-fundraise-redis:
    image: "redis:latest"
    container_name: group-fundraise-redis
    restart: always
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  group-fundraise-web:
    build:
      context: ../
      dockerfile: infra/Dockerfile
    container_name: group-fundraise-web
    env_file:
      - .env
    command: >
      sh -c "cd /app/ &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      group-fundraise-db:
        condition: service_healthy
      group-fundraise-redis:
        condition: service_started

  group-fundraise-celery:
    build:
      context: ../
      dockerfile: infra/Dockerfile
    env_file:
      - .env
    command: >
      sh -c "cd /app/ &&
             celery -A config worker -l info"
    depends_on:
      - group-fundraise-web
      - group-fundraise-redis


volumes:
  db_data:
  redis_data:
